name: SonarCloud

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Setup .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.0.x'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: dotnet restore backend/CosmoVerse/CosmoVerse/CosmoVerse.csproj

      # Step 4: Build the project
      - name: Build the project
        run: dotnet build backend/CosmoVerse/CosmoVerse/CosmoVerse.csproj --no-restore

      # Step 5: Run tests and collect code coverage
      - name: Run tests and collect coverage
        run: |
          dotnet test backend/CosmoVerse/CosmoVerse/CosmoVerse.csproj --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./TestResults

      # Step 6: Install report generator tool
      - name: Install report generator tool
        run: dotnet tool install --global dotnet-reportgenerator-globaltool

      # Step 7: Generate the Cobertura coverage report
      - name: Generate Cobertura report
        run: |
          reportgenerator -reports:./TestResults/*/coverage.cobertura.xml -targetdir:./CoverageResults -reporttypes:Cobertura

      # Step 8: SonarCloud Scan
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v1
        with:
          projectKey: ${{ secrets.SONAR_PROJECT_KEY }}
          organization: ${{ secrets.SONAR_ORGANIZATION }}
          token: ${{ secrets.SONAR_TOKEN }}
          # Optional: Specify paths for the coverage report
          extraProperties: |
            sonar.cs.opencover.reportsPaths=./CoverageResults/coverage.cobertura.xml
